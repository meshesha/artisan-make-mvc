<?php

/**
* This file generated by Meshesha/ArtisanMakeMvc package.
*
*/

namespace App\Http\Controllers;
use Illuminate\Http\Request;
$USE_MODEL$;

class $CONTROLLER_NAME$ extends Controller
{

    /**
     * Create a new controller instance.
     *
     * @return void
     */
    // public function __construct()
    // {
    //     $this->middleware('auth', ['except' => ['index', 'show']]);
    // }


    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        //https://laravel.com/docs/8.x/pagination#using-bootstrap
        //$$TABLE_NAME$ = $MODEL_NAME$::paginate(10);// laravel ver. < 8 => bootstrap | laravel ver. >= 8 =>Tailwind  
        $$TABLE_NAME$ = $MODEL_NAME$::$PAGINATE$($PAGINATE_PER_PAGE$);

        $data = [
            '$TABLE_NAME$' => $$TABLE_NAME$
        ];

        return view('$TABLE_NAME$.index')->with($data);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('$TABLE_NAME$.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        // $this->validate($request, [
        //     'col_1' => 'required',
        //     'col_2' => 'required',
        //         .
        //         .
        //         .
        //     'col_n' => 'required',
        // ]);

        $REQUEST_INPUT_TO_VAR$

        $$MODEL_NAME_LOWER$ = new $MODEL_NAME$;

        $VARTOMODEL$

        if($$MODEL_NAME_LOWER$->save()){
            return redirect("/$TABLE_NAME$")->with('success', 'Data saved successfully');
        }

         return redirect()->back()->with('error', 'Error in the process of saving the data');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $$MODEL_NAME_LOWER$ = $MODEL_NAME$::find($id);
        
        if(!$$MODEL_NAME_LOWER$){
            return redirect()->back()->with('error', '$MODEL_NAME_LOWER$ not found');
        }
        $data = [
            '$MODEL_NAME_LOWER$' => $$MODEL_NAME_LOWER$
        ];

        return view('$TABLE_NAME$.show')->with($data);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $$MODEL_NAME_LOWER$ = $MODEL_NAME$::find($id);

        if(!$$MODEL_NAME_LOWER$){
            return redirect()->back()->with('error', '$MODEL_NAME_LOWER$ not found');
        }
        
        $data = [
            '$MODEL_NAME_LOWER$' => $$MODEL_NAME_LOWER$
        ];

        return view('$TABLE_NAME$.edit')->with($data);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        // $this->validate($request, [
        //     'col_1' => 'required',
        //     'col_2' => 'required',
        //         .
        //         .
        //         .
        //     'col_n' => 'required',
        // ]);

        $$MODEL_NAME_LOWER$ = $MODEL_NAME$::find($id);

        if(!$$MODEL_NAME_LOWER$){
            return redirect()->back()->with('error', '$MODEL_NAME_LOWER$ not found');
        }

        $REQUEST_INPUT_TO_VAR$

        $VARTOMODEL$

        if($$MODEL_NAME_LOWER$->save()){
            return redirect()->back()->with('success', 'Data updated successfully');
        }

        return redirect()->back()->with('error', 'Error during DB update');



    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {

        $$MODEL_NAME_LOWER$ = $MODEL_NAME$::find($id);

        if(!$$MODEL_NAME_LOWER$){
            return redirect()->back()->with('error', '$MODEL_NAME_LOWER$ not found');
        }

        // It is recommended to check authorization before performing a deletion

        if($$MODEL_NAME_LOWER$->delete()){
            return redirect()->back()->with('success', 'Data deleted successfully');
        }

        return redirect()->back()->with('error', 'Error during deleting data from DB!');
    }
}
